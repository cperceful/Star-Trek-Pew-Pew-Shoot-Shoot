<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control state
global.playership = obj_player;
control[0] = scr_movement_player_keyboard;
control[1] = scr_movement_player_mouse;
controlstate = control[0];

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (position_meeting(mouse_x, mouse_y, obj_button_mousecontrol)) {
    if (mouse_check_button_pressed(mb_left)) {
        if (controlstate = control[0]) {
            obj_button_mousecontrol.image_index = 1;
            controlstate = control[1];
        } else {
            obj_button_mousecontrol.image_index = 0;
            controlstate = control[0];
        }            
    }
}

var escape = keyboard_check_pressed(vk_escape);

if (escape) {
    if (room = rm_space) {
        if (instance_exists(obj_battleship)) {
            obj_battleship.persistent = false;
        }
        if (instance_exists(obj_powerup)) {
            obj_powerup.persistent = false;
        }
        obj_player.persistent = false;
        if instance_exists(obj_galor) {
            obj_galor.persistent = false;
        }
        room_goto(rm_paused);
    }
}

if (escape) {
    if (room = rm_paused) {
        room_goto(rm_space);
    }
}

var reset = keyboard_check_pressed(ord("R"));

if (reset) {
    part_system_clear(obj_background.pbackground_sys);
    part_system_clear(obj_nebula.pnebula_sys);
    game_restart();
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room = rm_options) {
    if (controlstate = control[0]) obj_button_mousecontrol.image_index = 0;
    if (controlstate = control[1]) obj_button_mousecontrol.image_index = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
