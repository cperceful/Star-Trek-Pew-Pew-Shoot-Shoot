<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_battleship</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>while (distance_to_object(obj_player) &lt; 150)
{
    x = random(room_width);
    y = random(room_height);
}

direction = random(360);
speed = 0.5 + random(2);
image_angle = direction;

phasercharge = 0;
battleshiphp = 4;

audio_play_sound(snd_redalert, 0, 0);

state = scr_movement_battleship;
global.bscollide = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Particle effects

//Create system
pbsexplosion_sys = part_system_create();

//Create particle explosion
pbsexplosion = part_type_create();
part_type_shape(pbsexplosion, pt_shape_explosion);
part_type_size(pbsexplosion, .8, .8, 0.03, 0);
part_type_scale(pbsexplosion, 1, 1);
part_type_colour2(pbsexplosion, c_purple, c_blue);
part_type_alpha3(pbsexplosion, 1, .5, .1);

//Create particle core breach
pbscorebreach = part_type_create();
part_type_shape(pbscorebreach, pt_shape_ring);
part_type_size(pbscorebreach, .8, .8, .05, 0);
part_type_life(pbscorebreach, room_speed * 2, room_speed * 2);
part_type_alpha2(pbscorebreach, 1, 0);
part_type_colour2(pbscorebreach, c_blue, c_purple);

//Create emitter
pbsexplosion_emit = part_emitter_create(pbsexplosion_sys);
part_emitter_region(pbsexplosion_sys, pbsexplosion_emit, x, x, y, y, ps_shape_ellipse, ps_distr_gaussian);
part_emitter_burst(pbsexplosion_sys, pbsexplosion_emit, pbsexplosion, 1);

pbscorebreach_emit = part_emitter_create(pbsexplosion_sys);
part_emitter_region(pbsexplosion_sys, pbscorebreach_emit, x, x, y, y, ps_shape_ellipse, ps_distr_linear);
part_emitter_burst(pbsexplosion_sys, pbscorebreach_emit, pbscorebreach, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
script_execute(state);

///Collision timer
if (global.bscollide &gt; 0) {
    global.bscollide -= 1;
}

if (global.bscollide &lt; 0) {
    global.bscollide = 0;
}

if (!instance_exists(obj_battleship)) {
    part_system_destroy(pbsexplosion_sys);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_torpedo">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Taking damage from player

if (battleshiphp = 0) {
    instance_destroy();
    audio_play_sound(snd_battleship_explosion, 0, 0);
    global.points = global.points + 100;
} else {
    battleshiphp -= 1;
}

with (other) {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision damage



halfhp = global.hpshields / 1.3;
halfhull = global.hphull / 1.3;

//show_debug_message(string(halfhull));
//show_debug_message(string(halfhp));

///Set collision timer

if (global.bscollide &lt;= 0) {
    direction = random(360);
    image_angle = direction;
    speed = 30;
    if (global.hpshields &gt; 0) {

        global.hpshields = global.hpshields - halfhp;
    }

    if (global.hphull &gt; 0) and (global.hpshields = 0) {

        global.hphull = global.hphull - halfhull;
    
    }
    global.bscollide = 120;
    
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>112</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_wrap</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
